// Template Program.cs for TechTicker services with authentication
using TechTicker.ServiceDefaults;
using TechTicker.Shared.Extensions;

namespace TechTicker.SampleService;

public class Program
{
    public static void Main(string[] args)
    {
        var builder = WebApplication.CreateBuilder(args);

        // Add Aspire service defaults (health checks, logging, telemetry)
        builder.AddServiceDefaults();

        // Add database context (if needed)
        // builder.AddNpgsqlDbContext<YourDbContext>("your-connection-name");

        // Add messaging (if needed)
        // builder.AddRabbitMQClient("messaging");

        // Add TechTicker shared services with authentication
        builder.Services.AddTechTickerShared(
            builder.Configuration, 
            enableAuthentication: true, 
            isDevelopment: builder.Environment.IsDevelopment());

        // Add controllers for API endpoints
        builder.Services.AddControllers();

        // Add your application services here
        // builder.Services.AddScoped<IYourService, YourService>();

        // Add background services (if needed)
        // builder.Services.AddHostedService<YourWorker>();

        // Add API documentation
        builder.Services.AddEndpointsApiExplorer();
        builder.Services.AddSwaggerGen();

        var app = builder.Build();

        // Configure the HTTP request pipeline
        if (app.Environment.IsDevelopment())
        {
            app.UseSwagger();
            app.UseSwaggerUI();
        }

        // Map default health check endpoint
        app.MapDefaultEndpoints();

        app.UseHttpsRedirection();
        
        // Add TechTicker shared middleware pipeline (includes auth)
        app.UseTechTickerPipeline(enableAuthentication: true);
        
        app.MapControllers();

        app.Run();
    }
}
