// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TechTicker.PriceHistoryService.Data;

#nullable disable

namespace TechTicker.PriceHistoryService.Migrations
{
    [DbContext(typeof(PriceHistoryDbContext))]
    [Migration("20250614182424_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TechTicker.PriceHistoryService.Models.PriceHistoryRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Guid>("CanonicalProductId")
                        .HasColumnType("uuid")
                        .HasColumnName("canonical_product_id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("OriginalStockStatus")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("original_stock_status");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("price");

                    b.Property<string>("ProductName")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("product_name");

                    b.Property<string>("SellerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("seller_name");

                    b.Property<string>("SourceUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)")
                        .HasColumnName("source_url");

                    b.Property<string>("StockStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("stock_status");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("timestamptz")
                        .HasColumnName("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp")
                        .HasDatabaseName("IX_PriceHistory_Timestamp");

                    b.HasIndex("CanonicalProductId", "Timestamp")
                        .HasDatabaseName("IX_PriceHistory_ProductId_Timestamp");

                    b.HasIndex("SellerName", "Timestamp")
                        .HasDatabaseName("IX_PriceHistory_Seller_Timestamp");

                    b.HasIndex("CanonicalProductId", "SellerName", "Timestamp")
                        .HasDatabaseName("IX_PriceHistory_ProductId_Seller_Timestamp");

                    b.ToTable("price_history");
                });
#pragma warning restore 612, 618
        }
    }
}
