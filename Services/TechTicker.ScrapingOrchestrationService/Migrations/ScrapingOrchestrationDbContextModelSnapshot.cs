// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TechTicker.ScrapingOrchestrationService.Data;

#nullable disable

namespace TechTicker.ScrapingOrchestrationService.Migrations
{
    [DbContext(typeof(ScrapingOrchestrationDbContext))]
    partial class ScrapingOrchestrationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TechTicker.ScrapingOrchestrationService.Models.DomainScrapingProfile", b =>
                {
                    b.Property<string>("Domain")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HeaderProfiles")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("LastRequestAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MaxDelayMs")
                        .HasColumnType("integer");

                    b.Property<int>("MinDelayMs")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("NextAllowedRequestAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserAgentList")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Domain");

                    b.HasIndex("NextAllowedRequestAt");

                    b.ToTable("DomainScrapingProfiles");
                });
#pragma warning restore 612, 618
        }
    }
}
